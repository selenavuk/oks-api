package rs.oks.api.model;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.SourceType;
import org.hibernate.annotations.UpdateTimestamp;

import java.sql.Timestamp;
import java.util.*;

@Entity
@Table(name = "user")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class User {

    // Autogenerated id

//    @Id
//    @GeneratedValue(strategy = GenerationType.IDENTITY)
//    @Column(name = "id")
//    private Long id;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "user_sequence")
    @SequenceGenerator(name = "user_sequence", sequenceName = "user_sequence", allocationSize = 1)
    @Column(name = "id")
    private Long id;

    // Info mapped from Excel table

    @NonNull
    @Column(name = "first_name")
    private String firstName;

    @NonNull
    @Column(name = "last_name")
    private String lastName;

    @NonNull
    @Column(name = "date")
    private String date;

    @NonNull
    @Column(name = "payment_method")
    private String paymentMethod;

    @Column(name = "membership_fee")
    private String membershipFee;

    @ElementCollection
    @CollectionTable(name = "training_sessions", joinColumns = @JoinColumn(name = "user"))
//    @OrderColumn(name = "order_index")
    @Column(name = "training_sessions")
    private List<Boolean> trainingSessions;

    @Column(name = "total_training_sessions")
    private Integer totalTrainingSessions;

    @NonNull
    @Column(name = "phone_number")
    private String phoneNumber;

    @NonNull
    @Column(name = "in_viber_group")
    private String inViberGroup;

    @NonNull
    @Column(name = "access_card")
    private String accessCard;

    @NonNull
    @Column(name = "height")
    private String height;

    @NonNull
    @Column(name = "note")
    private String note;

    @NonNull
    @Column(name = "color_flagged_info")
    private String colorFlaggedInfo;


    // Info that user will have to create before the first login

    @Column(name = "username")
    private String username;

    @Column(name = "email")
    private String email;

    @Column(name = "password")
    private String password;


    // Info used to track

    @NonNull
    @CreationTimestamp(source = SourceType.DB)
    @Column(name = "created_at")
    private Timestamp created_at;

    @NonNull
    @UpdateTimestamp(source = SourceType.DB)
    @Column(name = "updated_at")
    private Timestamp updated_at;

    @Column(name = "last_login")
    private Timestamp last_login;
}